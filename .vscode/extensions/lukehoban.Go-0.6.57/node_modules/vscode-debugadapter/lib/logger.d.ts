import { OutputEvent } from './debugSession';
export declare enum LogLevel {
    Verbose = 0,
    Log = 1,
    Warn = 2,
    Error = 3,
}
export declare type ILogCallback = (outputEvent: OutputEvent) => void;
export declare function log(msg: string, level?: LogLevel): void;
export declare function verbose(msg: string): void;
export declare function warn(msg: string): void;
export declare function error(msg: string): void;
/**
 * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is
 * called the first time, because minLogLevel defaults to Warn.
 */
export declare function setup(consoleMinLogLevel: LogLevel, logToFile: boolean): void;
export declare function init(logCallback: ILogCallback, logFilePath?: string, logToConsole?: boolean): void;
export declare class LogOutputEvent extends OutputEvent {
    constructor(msg: string, level: LogLevel);
}
export declare function trimLastNewline(str: string): string;
